---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: Terraform AWS SNS

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-sns

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/clouddrove/terraform-aws-sns.svg"
    url: "https://github.com/clouddrove/terraform-aws-sns/releases/latest"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-sns/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-sns/actions/workflows/tfsec.yml"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"
  - name: "Changelog"
    image: "https://img.shields.io/badge/Changelog-blue"
    url: "CHANGELOG.md"

prerequesties:
  - name: Terraform
    url: https://learn.hashicorp.com/terraform/getting-started/install.html
    version: ">= 1.6.6"

providers:
  - name: aws
    url: https://aws.amazon.com/
    version: ">= 5.31.0"

module_dependencies:
  - name: Labels Module
    url: https://github.com/clouddrove/terraform-aws-labels
    description: Provides resource tagging.

#  description of this project
description: |-
  Terraform module is used to setup SNS service to manage notifications on application.


# How to use this project
usage : |-
  Here are some examples of how you can use this module in your inventory structure:
  ### APNS
  #### Basic
  ```hcl
    module "sns" {
      source      = "clouddrove/sns/aws"
      name        = local.name
      environment = local.environment
      enable_sns  = true
      platform    = "APNS"
      key         = "../../certificates/private_key.pem"
      certificate = "../../certificates/cert.pem"
    }
  ```
  #### Text
  ```hcl
    module "sns" {
      source                = "clouddrove/sns/aws"
      name                  = local.name
      environment           = local.environment
      enable_sms_preference = true
      monthly_spend_limit   = "1"

      delivery_status_success_sampling_rate = "50"
      default_sender_id                     = "test"
      default_sms_type                      = "Transactional"
    }
  ```

  #### Complete
  ```hcl
    module "sns" {
      source                = "clouddrove/sns/aws"
      name                  = local.name
      environment           = local.environment
      platform              = "APNS"
      enable_sms_preference = true
      enable_topic          = true
      endpoint              = module.sqs.arn
      protocol              = "sqs"
      key                   = "../../certificates/private_key.pem"
      certificate           = "../../certificates/cert.pem"
      delivery_policy       = file("../../_json/delivery_policy.json")
      policy                = data.aws_iam_policy_document.sns-topic-policy.json
    }

      data "aws_iam_policy_document" "sns-topic-policy" {
      policy_id = "__default_policy_ID"
      statement {
      actions = [
      "SNS:Subscribe",
      "SNS:SetTopicAttributes",
      "SNS:RemovePermission",
      "SNS:Receive",
      "SNS:Publish",
      "SNS:ListSubscriptionsByTopic",
      "SNS:GetTopicAttributes",
      "SNS:DeleteTopic",
      "SNS:AddPermission",
      ]
      condition {
      test     = "StringEquals"
      variable = "AWS:SourceOwner"

      values = [
      data.aws_caller_identity.current.account_id,
      ]
      }
      effect = "Allow"
      principals {
      type        = "AWS"
      identifiers = ["*"]
      }
      resources = [
      format("arn:aws:sns:eu-west-1:%s:app/APNS/sns-test", data.aws_caller_identity.current.account_id)
      ]
      sid = "__default_statement_ID"
      }
    }
  ```
  ### GCM
  ```hcl
    module "sns" {
      source      = "clouddrove/sns/aws"
      name        = local.name
      environment = local.environment
      enable_sns  = true
      platform    = "GCM"
      gcm_key     = "AAAA8TYQCtc:APesgdrthyujioyhtgfds4icP_6Kyz3OT2Ms1cbJZDOq3AkCAt5tNpNE0g3oUQBdind1g7891cdrVAxbOmzL3XRd0ktgkFne2OwI7pC5an877XcBNQiHPMHT7dN7TykI2o6O2K"
    }
  ```
  ### sns_topic
  ```hcl
    module "sns" {
      source       = "clouddrove/sns/aws"
      name         = local.name
      environment  = local.environment
      enable_topic = true

      subscribers = {
        newrelic = {
          protocol                        = "https"
          endpoint                        = "https://example.com"
          endpoint_auto_confirms          = false
          raw_message_delivery            = true
          filter_policy                   = ""
          delivery_policy                 = ""
          confirmation_timeout_in_minutes = "60"
        },
        sms = {
          protocol                        = "sms"
          endpoint                        = "9198*****"
          endpoint_auto_confirms          = false
          raw_message_delivery            = false
          filter_policy                   = ""
          delivery_policy                 = ""
          confirmation_timeout_in_minutes = "60"
        },
      }
    }
  ```
